import os
import cv2
import numpy as np
from skimage.feature import hog
from skimage import exposure
from sklearn import svm
from sklearn.metrics import accuracy_score, classification_report
from sklearn.preprocessing import LabelEncoder
from skimage.transform import resize

# Set the path to your dataset root directory
dataset_root = 'train and test'

# Load image data and labels
def load_data_and_labels(root_path):
    data = []
    labels = []
    label_encoder = LabelEncoder()

    for family in os.listdir(root_path):
        family_path = os.path.join(root_path, family)

        for file_name in os.listdir(family_path):
            file_path = os.path.join(family_path, file_name)
    
            # Check if the item in the folder is a file
            for class_name in os.listdir(file_path):
                class_path = os.path.join(file_path,class_name)
                if os.path.isfile(class_path):
                    # print(class_path)
                    # Load image
                    img = cv2.imread(class_path)

                    # Convert to grayscale and resize
                    img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
                    img_resized = cv2.resize(img_gray, (128, 64))  # Resize for consistency

                    # Extract HOG features
                    features = hog(img_resized, orientations=8, pixels_per_cell=(8, 8),
                                cells_per_block=(1, 1), visualize=False)

                    # Enhance the contrast of the HOG features
                    features = exposure.rescale_intensity(features, in_range=(0, 10))

                    data.append(features)
                    labels.append(family)

    # Encode categorical labels into numerical format
    encoded_labels = label_encoder.fit_transform(labels)

    return data, encoded_labels

data ,encoded_labels = load_data_and_labels(dataset_root)

print (data)