import os
import cv2
import numpy as np
from sklearn.cluster import KMeans
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.feature_extraction import image
from sklearn.preprocessing import StandardScaler
import sys
import load_data as ld 


sys.path.append('src\load_data.py')
import display_imgs as ds




# Set the path to your dataset root directory
dataset_root = 'train and test'

# Load data and labels from the training set
X_train, y_train = ld.load_data_and_labels(os.path.join(dataset_root, 'train'))

# Load data and labels from the testing set
X_test, y_test = ld.load_data_and_labels(os.path.join(dataset_root, 'test'))


# Display images in the "train" folder
ds.display_images_in_folder('train')

# Display images in the "test" folder
ds.display_images_in_folder('test')

# Convert data to NumPy arrays
X_train = np.array(X_train)
X_test = np.array(X_test)

# Feature extraction using bag-of-words model
n_clusters = 100  # Number of visual words
kmeans = KMeans(n_clusters=n_clusters, random_state=42)
X_train_bow = kmeans.fit_transform(X_train)
X_test_bow = kmeans.transform(X_test)

# SVM classification
svm_model = SVC(kernel='linear', C=1)
svm_model.fit(X_train_bow, y_train) 

# Evaluate the SVM model
svm_predictions = svm_model.predict(X_test_bow)
svm_accuracy = accuracy_score(y_test, svm_predictions)
print(f"SVM Model Accuracy: {svm_accuracy}")
